[tool.poetry]
name = "pow"
version = "0.1.0"
description = "Python Overseerr Wrapper"
authors = ["Steven Marks - TotalDebug"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/totaldebug/pow"
repository = "https://github.com/totaldebug/pow"

packages = [{ include = "pow" }]

[tool.poetry.dependencies]
python = "^3.12"
aiohttp = "^3.9.3"


[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.3.0"
black = "^24.3.0"
isort = "^5.13.2"
mypy = "^1.9.0"
pre-commit = "^3.6.2"
flake8 = "^7.0.0"
interrogate = "^1.5.0"
autoflake = "^2.3.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
logging_use_named_masks = true
tag_format = "v{version}"
commit_parser = "angular"
commit_author = "semantic-release <semantic-release>"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
build_command = "pip install poetry && poetry build"
major_on_zero = true
version_variable = ["pow/const.py:__version__"]
version_toml = ["pyproject.toml:tool.poetry.version"]

upload_to_PyPI = true
upload_to_release = true

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease = false
prerelease_token = "rc"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
token = { env = "GH_TOKEN" }

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.nox
    | \.venv
    | \.cache
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
exclude = 'tests'


[tool.isort]
profile = "black"
line_length = 100
# will group `import x` and `from x import` of the same module.
force_sort_within_sections = true
known_first_party = ["pow", "tests"]
forced_separate = ["tests"]
skip = [".cache", ".nox"]
combine_as_imports = true

[tool.autoflake]
check = true
remove-unused-variables = true
remove-all-unused-imports = true
remove-duplicate-keys = true

[tool.interrogate]
ignore-init-method = true
ignore-init-module = false
ignore-magic = false
ignore-semiprivate = false
ignore-private = false
ignore-property-decorators = false
ignore-module = true
ignore-nested-functions = false
ignore-nested-classes = true
ignore-setters = false
fail-under = 100
exclude = ["setup.py", "docs", "build", ".devcontainer", ".nox", ".cache"]
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
verbose = 0
quiet = false
color = true
